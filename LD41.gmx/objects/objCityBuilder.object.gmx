<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cellWidth = 128
cellHeight = 128

hoverX = 0
hoverY = 0
okToPlace = false
animT = 0
readyToDraw = false

enabled = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not enabled {
    exit
}

readyToDraw = true
animT ++

// Compute which cell we're hovering over
hoverX = floor(mouse_x/cellWidth)*cellWidth
hoverY = floor(mouse_y/cellHeight)*cellHeight

okToPlace = not instance_position(hoverX, hoverY, objCityCell)

// Place buildings
if mouse_check_button_pressed(mb_left) and okToPlace {
    instance_create(hoverX, hoverY, objCityCell)
    okToPlace = false
}

// Scroll the camera when you move your mouse to the edges
if scrMouseInWindow() {
    var scrollSpeed = 10
    var edgeDist = 50 // How close to the edge the mouse must be to scroll
    
    if mouse_x &lt; view_xview+edgeDist {
        view_xview -= scrollSpeed
    }
    if mouse_x &gt; view_xview+view_wview-edgeDist {
        view_xview += scrollSpeed
    }
    if mouse_y &lt; view_yview+edgeDist {
        view_yview -= scrollSpeed
    }
    if mouse_y &gt; view_yview+view_hview-edgeDist {
        view_yview += scrollSpeed
    }
    
    var minCameraX = -1000
    var maxCameraX = 1000
    var minCameraY = -1000
    var maxCameraY = 1000
    
    view_xview = clamp(view_xview, minCameraX, maxCameraY)
    view_yview = clamp(view_yview, minCameraY, maxCameraY)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not enabled or not readyToDraw {
    exit
}

var flash = floor(animT/10) mod 2 == 0

if okToPlace {
    draw_sprite_ext(sprCityCellTemp, 0, hoverX, hoverY, 1, 1, 0, c_white, 0.5)
}

var xAlpha = 0.5
if flash xAlpha = 1
draw_sprite_ext(sprCityCellNoPlace, okToPlace, hoverX, hoverY, 1, 1, 0, c_white, xAlpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
