<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHouse</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
structureType = STRUCTURE.ROAD
t = 0
minSpawnT = 1000
maxSpawnT = 1400
spawnT = irandom_range(minSpawnT, maxSpawnT)

citizenOut = false
citizenSpawnT = irandom_range(1, 100)
builtThisPhase = true

wallObj = noone
fogBlockerObj = noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with wallObj {
    instance_destroy()
}
with fogBlockerObj {
    instance_destroy()
}

// If the player is now in the fog because this building was destroyed,
// push them back toward the center of the city
with objShootPlayer {
    var n = 0
    var len = 16
    var dir = point_direction(x, y, 0, 0)
    var dx = lengthdir_x(len, dir)
    var dy = lengthdir_y(len, dir)
    while not place_meeting(x, y, objFogBlocker) {
        x += dx
        y += dy
    
        // Don't get caught in an infinite loop
        n++
        if n &gt;= 10 {
            break
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if objGameController.state == GAME_STATE.BUILD {
    // Spawn citizen
    t++
    if structureType == STRUCTURE.HOUSE
    and not citizenOut
    and t &gt;= citizenSpawnT {
        citizenOut = true
        instance_create(
            x+objCityBuilder.cellWidth/2,
            y+objCityBuilder.cellHeight/2,
            objCitizen)
    }
}

if objGameController.state == GAME_STATE.SHOOT {
    // Periodically spawn monsters
    t++
    if (structureType == STRUCTURE.HOUSE
    or structureType == STRUCTURE.FACTORY
    or structureType == STRUCTURE.STORE)
    and t &gt;= spawnT {
        t = 0
        spawnT = irandom_range(minSpawnT, maxSpawnT)
        
        // Only spawn if not close to player
        if instance_exists(objShootPlayer)
        and point_distance(x+16, y+16, objShootPlayer.x, objShootPlayer.y) &gt; 96 {
            var c = instance_create(
                x+objCityBuilder.cellWidth/2,
                y+objCityBuilder.cellHeight/2,
                objCitizenEnemy)
                
            if structureType == STRUCTURE.HOUSE {
                c.sprite_index = sprEvilPoliceWalk
            } else if structureType == STRUCTURE.FACTORY {
                c.sprite_index = choose(sprEvilHatGuyWalk, sprEvilHatGuy2Walk)
            } else if structureType == STRUCTURE.STORE {
                c.sprite_index = sprEvilBakerWalk
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
