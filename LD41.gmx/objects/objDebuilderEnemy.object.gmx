<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDebuilder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

image_speed = 1/20
walkSpeed = 0.25
maxhp = 150
hp = maxhp
knockback = 0.1
image_index = irandom(image_number-1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objShootPlayer) {

    // Walk towards the player
    
    var dir = point_direction(x, y, objShootPlayer.x, objShootPlayer.y)
    var h = lengthdir_x(walkSpeed, dir)
    var v = lengthdir_y(walkSpeed, dir);
    
    x += h
    y += v
    
    if h &lt; 0 {
        image_xscale = -1
    }
    if h &gt; 0 {
        image_xscale = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Destroy buildings when we collide with their Wall objects
with other {
    instance_destroy()
    with parent {
        instance_destroy()
        
        // Dust particles
        var d = 8
        var xc = x+objCityBuilder.cellWidth/2
        var yc = y+objCityBuilder.cellHeight/2
        scrCreatePoof(xc, yc)
        scrCreatePoof(xc-d, yc-d)
        scrCreatePoof(xc-d, yc+d)
        scrCreatePoof(xc+d, yc-d)
        scrCreatePoof(xc+d, yc+d)
        
        instance_create(x, y, objRubble)
    }
}

audio_play_sound(sndBuildFactory, 0, false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw indicator arrow if not enough on-screen.

var offset = 32
if not collision_rectangle(
view_xview+offset,
view_yview+offset,
view_xview+view_wview-offset,
view_yview+view_hview-offset,
id, false, false) {
    var xc = view_xview+view_wview/2
    var yc = view_yview+view_hview/2
    var dir = point_direction(xc, yc, x, y)
    var len = 100
    var len2 = 70
    
    draw_sprite_ext(sprDebuilderArrow, 0,
        xc + lengthdir_x(len, dir),
        yc + lengthdir_y(len, dir),
        1, 1, dir, c_white, 1)
    
    draw_set_font(scrGetFont(10))
    draw_set_halign(fa_center)
    draw_set_valign(fa_center)
    draw_set_color(c_red)
    draw_text_transformed(xc+lengthdir_x(len2, dir), yc+lengthdir_y(len2, dir), '!', 2, 2, 0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
