<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFog</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw fog
var cellWidth = 32
var cellHeight = 32

// Draw dark clouds and then light clouds
//for (var drawDark = 1; drawDark &gt;= 0; drawDark--) {
for (var drawDark = 0; drawDark &lt;= 1; drawDark++) {
    

    for (var xx = view_xview-cellWidth; xx &lt; view_xview + view_wview + cellWidth; xx += cellWidth/2) {
        for (var yy = view_yview-cellHeight; yy &lt; view_yview + view_hview + cellHeight; yy += cellHeight/2) {
            var cellX = floor(xx/cellWidth)*cellWidth + cellWidth/2
            var cellY = floor(yy/cellHeight)*cellHeight + cellHeight/2
            
            // Seed the random angle based on the fog cloud position
            random_set_seed(cellX+cellY*123)
            var angle = choose(0, 90, 180, 270)
            var xScale = choose(1, -1)
            var yScale = choose(1, -1)
            
            var cs = 32
            var dark = collision_rectangle(
                cellX-cs, // ?? i thought it would be -1 and +1 ...
                cellY-cs,
                cellX+cs+1,
                cellY+cs+1,
                objFogBlocker, false, false) == noone
            
            if dark == drawDark {
                if not instance_position(cellX, cellY, objFogBlocker) {
                    draw_sprite_ext(sprFog, dark, cellX, cellY, xScale, yScale, angle, c_white, 1)
                }
            }
        }
    }

}

randomize()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
