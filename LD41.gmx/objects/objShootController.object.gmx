<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerGun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = -1

enabled = false
t = 0
surviveT = 60*20
cheeseT = 0
cheeseSpawnT = 300
debuilderT = 0
debuilderSpawnT = 600
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not enabled {
    exit
}

// enabled should be false, but just in case...
if not instance_exists(objShootPlayer) {
    exit
}

// Spawn based around the player
var centerX = objShootPlayer.x
var centerY = objShootPlayer.y;

t++



// Scale cheese spawn rate
var intensity = clamp(instance_number(objCityCellBuilding)/30, 0, 1);
cheeseSpawnT = lerp(250, 100, intensity)

// Spawn groups of cheese people from the fog
cheeseT ++
if cheeseT &gt;= cheeseSpawnT {
    cheeseT = 0
    
    var dir = random(360)
    
    // Determine the closest point in that direction that's inside the fog.
    var len = 32
    while instance_position(
    centerX+lengthdir_x(len, dir), centerY+lengthdir_y(len, dir), objFogBlocker) != noone {
        len += 16
    }
    
    len += 70
    
    // Spawn cheese people
    var numCheese = choose(4, 5, 6, 7)
    for (var i=0; i&lt;numCheese; i++) {
        var len2 = len+random(70)
        var dir2 = dir + random_range(-13, 13)
        var xx = centerX+lengthdir_x(len2, dir2)
        var yy = centerY+lengthdir_y(len2, dir2)
        
        with instance_create(xx, yy, objCheeseEnemy) {
            // One leader
            if i == 0 {
                sprite_index = sprCheeseLeader
                leader = true
            }
            
            // Don't spawn too close with friends
            while place_meeting(x, y, objCheeseEnemy) {
                x += 8
            }
        }
    }
}



// Scale debuilder spawn rate
//var intensity = clamp(instance_number(objCityCellBuilding)/30, 0, 1);
//debuilderSpawnT = 60*9//lerp(250, 100, intensity)

// Spawn debuilders from the fog
debuilderT ++
if debuilderT &gt;= debuilderSpawnT and instance_number(objCityCellBuilding) &gt;= 8 {
    debuilderT = 0
    var dir = random(360)
    
    // Determine the closest point in that direction that's inside the fog.
    var len = 32
    while instance_position(
    centerX+lengthdir_x(len, dir), centerY+lengthdir_y(len, dir), objFogBlocker) != noone {
        len += 16
    }
    
    len += 32
    
    var len2 = len+random(30)
    var dir2 = dir+random_range(-30, 30)
    var xx = centerX+lengthdir_x(len2, dir2)
    var yy = centerY+lengthdir_y(len2, dir2)
    
    // Spawn debuilder
    with instance_create(xx, yy, objDebuilderEnemy) {
        
    }
}



// Round end
if t &gt;= surviveT {
    scrEnterBuildPhase()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not enabled {
    exit
}

draw_set_font(scrGetFont(10))
draw_set_halign(fa_center)
draw_set_valign(fa_top)
var secondsStr = string(floor(surviveT/60)-floor(t/60))
scrDrawTextOutline(view_xview+view_wview/2, view_yview+5, 'Survive!#'+secondsStr, c_white, c_black)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
